name: CI/CD Angular App

on:
  push:
    branches:
      - developer  
      - main
      - 'release-*'

env:
  IMAGE_NAME: heshambr/frontend
  PROJECT_ID: corded-racer-455623-i7

jobs:
  build:
    runs-on: ubuntu-latest  # Pode ser windows-latest ou macos-latest dependendo do ambiente que você precisa

    steps:
      - name: Check out repository
        uses: actions/checkout@v2  # Faz checkout do código do repositório

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'  # Defina a versão que você usa no seu projeto

      - name: Install dependencies
        run: npm install  # Instala as dependências do projeto

      - name: Build Angular project
        run: npm run build --prod  # Compila a aplicação para produção

  # Job para build e push no Docker
  build-and-push:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

        #GKE GCP
      - name: Autenticar no Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME:${GITHUB_SHA} .

      - name: Push Docker image
        run: docker push $IMAGE_NAME:${GITHUB_SHA}

      #INSTALA AUTH
      - name: Instalar Google Cloud SDK com gke-gcloud-auth-plugin
        run: |
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | \
            sudo tee /etc/apt/sources.list.d/google-cloud-sdk.list
          sudo mkdir -p /usr/share/keyrings
          curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | \
            sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
          sudo apt-get update
          sudo apt-get install -y google-cloud-sdk kubectl google-cloud-sdk-gke-gcloud-auth-plugin

      - name: Definir cluster e namespace de destino
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "CLUSTER_NAME=cluster-semanal-prod" >> $GITHUB_ENV
            echo "CLUSTER_LOCATION=us-central1" >> $GITHUB_ENV
            echo "BACK_NAMESPACE=prodback" >> $GITHUB_ENV
            echo "NAMESPACE=prodfront" >> $GITHUB_ENV
          else
            echo "CLUSTER_NAME=cluster-semanal-homol" >> $GITHUB_ENV
            echo "CLUSTER_LOCATION=us-east1" >> $GITHUB_ENV
            echo "BACK_NAMESPACE=homolback" >> $GITHUB_ENV
            echo "NAMESPACE=homolfront" >> $GITHUB_ENV
          fi
      #vai se foder!!!
      - name: Deploy para Kubernetes
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            gcloud container clusters get-credentials cluster-semanal-prod --region us-central1-b --project $PROJECT_ID
            kubectl get ns $NAMESPACE || kubectl create ns $NAMESPACE
            kubectl apply -f K8s/ 
            kubectl set image deployment/frontend frontend=$IMAGE_NAME:${GITHUB_SHA} -n prodfront
          elif [[ "${GITHUB_REF}" == "refs/heads/developer" ]]; then
            gcloud container clusters get-credentials cluster-semanal-homol --region us-east1-b --project $PROJECT_ID
            kubectl get ns $NAMESPACE || kubectl create ns $NAMESPACE
            kubectl apply -f K8s/ 
            kubectl set image deployment/frontend frontend=$IMAGE_NAME:${GITHUB_SHA} -n homolfront
          fi
